试用
	new topic 3
		1.质量目标要求
			检视意见密度
				>15/Kloc
			LLT用例密度
				>12/Kloc
			LLT缺陷密度
				>[1.5,3.5]，目标2.5个/Kloc
			LLT增量覆盖率
				>95%
			SDV用例密度
				>12/Kloc
			SDV缺陷密度
				>[1.5,3]，目标2.5个/Kloc
			SDV增量覆盖率
				>85%
			SIT缺陷密度
				1个/KLOC
			用例自动化率
				100%
		2.需求分析
			需求信息
				来源产品
					XXX
				需求背景
					XXX
				应用场景
					XXX
			需求测试分析
				测试组网
					XXX
				测试质量属性维度分析
					可靠性
						XXX
					安全性
					可维护性&可测试性
					架构&机制
					功能
					兼容性
					性能
					可扩展性
			需求测试风险点分析识别与对策
				XXX
		3.设计概况
			测试设计责任人
				XXX
		4.测试设计
			注意事项：
				内存泄漏检查作为每一个测试场景的必选项统一在这里要求
			HLT测试设计
				测试设计范围
					重点关注端到端的对用户的外在功能表现和产品的使用场景
				质量属性维度
					01 功能测试
						定义
							满足客户需求的业务服务
							例如：正常场景、异常场景、边界值，随机值等
						要求与参考
							1、结合特性和周边特性的关联影响，做功能组合测试
							2、进行正常场景、异常场景、随机取值场景等的测试
							3、涉及到NP的考虑是否涉及NP多实例
							3、覆盖异常场景（链路Down，会话Down，超时等）下的通知消息和PPI是否成对
						XXX
					02 可靠性测试
						定义
							系统减少故障发生，降低故障影响，以及发生故障后快速恢复等能力
						要求与参考
							1、故障模式库点
								系统资源
									内存
										内存分配失败
										系统内存不足
									CPU
										CPU过载
										任务被抢占
									锁
										死锁
									队列
										溢出
										阻塞
									定时器
										提前超时
								系统业务
									系统异常配置
										API入参异常
										配置颠倒
									钩子注册
										特性相关钩子函数未注册
										钩子函数返回异常
									协议健壮性
										状态机异常
										协议字段异常
								参考DOPRA 
							2、涉及HA功能验证点
								1、批备&实备功能验证
									验证批备&实备过程中备板的PPI、通知消息、配置字段等是否和主板一致
								2、主备倒换功能验证
									验证主备倒换后业务能否恢复到倒换前的状态
							3、Trunk和BFDN涉及SR功能验证点
								1、平滑功能验证
							4、多任务并发操作下的可靠性
								1、典型的表项的增删改查并发操作，其它根据需求场景梳理
								2、并发操作持续运行一周以上
						XXX
					03 性能测试
						定义
							系统在容量、时延、吞吐率等方面的表现，体现系统的竞争力
						要求
							1、和性能基线进行对比测试
							2、性能测试包括包括时间性能（如，CPU占用率、启动时间），空间性能（如，内存占用率）、压力及稳定性（如，长时间运行稳定性）等
							3、测试大流量/大规格下不会独占资源，任务卡死
						XXX
					04 安全测试
						定义
							保护信息和数据的能力，根据用户等级进行相应权限管理
								鉴定：系统检查一个用户身份的方式
								授权：根据不同的权限级别系统给验证通过的用户授予权力
								私密性：保护客户数据，不会被未授权的用户使用或看到
								安全漏洞：使系统无法执行安全的方式（例如，社交设计上的漏洞）
								防攻击：保护系统抵御攻击
						要求
							1、协议健壮性测试
								Attacker
								FUZZ
							2、公司安全红线
								参考““进行验证
								
							3、安全设计规范测试
								1、参考”例集V1.0“进行验证
								2、评审”cklist_v1.0“
							4、阶段点活动
								TR2
									安全需求分析/安全威胁分析
									制定测试策略
								迭代内
									开发静态检查
									安全测试设计
									迭代新增特性安全测试
								TR5
									安全红线专项/资料
									全量安全活动
										迭代内做完如果后续无变化可以不做
								TR6
									变更分析补测
							5、安全红线测试项
								未公开接口（A1）
									1.8 所有非查询类操作（含处于隐藏模式下的命令、参数、生产调测命令等）必须有日志记录
								敏感数据保护（A2）
									认证凭据不允许明文存储在认证端的系统中
									密钥不允许明文存储在系统中，应该加密保护并提供访问控制
									产品安全敏感数据（如：个人用户使用的口令、操作维护用途的口令、用于网络通信协议协商的身份认证Key等）不得在日志中明文记录。
									禁止使用私有算法实现加解密
								协议防攻击（B）
									３、协议扫描－－Codenomic工具
								合法监听接口（A1）
									日志中不允许记录任何涉及监听对象的敏感信息
								访问通道控制（A2）
									系统端口扫描/通信矩阵
										１、端口扫描－－NMAP工具
											端口通信矩阵
								软件完整性保护（A2）
									４、病毒扫描－－Avira、Offscan、
								操作系统/数据库加固（B）
									２、漏洞扫描－－NESSUS工具
								安全编码/静态检查（B）
									7、PClink，CSEC，if 0，不安全函数
										开发负责此项，已经集成到CI
									8、内存安全函数调用---桩函数确保
							6、内存泄漏专项测试
								1、验证特性功能删除（去使能）后特性的内存占用不泄漏
								2、验证特性功能删除（去使能）后关联特性的内存占用不泄漏
							7、安全可信测试
								1、输入报文的来源可信测试
									1、报文的源地址和目的地址可信验证
						XXX
					05 韧性测试
						定义
							网络在面对运行的各种故障和挑战时，提供并保持可接受的服务水平的能力
						要求与参考
							1、容错处理能力
							2、从版本可信定义的威胁场景分析风险场景
						XXX
					06 兼容性测试
						定义
							系统与各类设备的兼容，包括与本系统兼容（向前兼容、向后兼容）、与友商设备兼容、与第三方服务器兼容
								应用兼容性：与其他软件产品协同工作
								操作系统兼容性：在特定的操作系统下工作
								硬件兼容性：在特定的硬件组件和配置下工作
								向后兼容性：与早期版本的配合
								向前兼容：与新版本的数据的兼容
								与友商设备兼容（如协议一致性等）
						要求与参考
							新版本与老版本对接兼容
								与业界设备对接
							协议版本兼容性
							LLT里无法测试的在HLT里进行测试
						XXX
					07 可测试性
						定义
							所有交付功能被测试的容易程度
								涉及到故障模拟、第三方对接时，需重点考虑可测试性
						要求与参考
							1、Set和Get接口要配对
							2、API/结构是否对外放在头文件
							3、具备调试/日志手段
							4、具备维测统计查询/显示功能
						XXX
					08 可维护性
						定义
							问题快速定位和修复能力
								提供查询类、统计类、恢复类、抓包类的定位手段，如，日志、计数、黑匣子、补丁等
						要求与参考
							代码编程规范自检
								1、新增函数注释规范
								2、代码重点逻辑添加注释
								3、注释表达清晰，无错别字
								4、无魔鬼数字
							定位手段充分性自检
								1、异常分支中记录日志
								2、记录日志的ID唯一，内容充分且清晰、无错别字
								3、异常分支中不遗忘统计计算
						XXX
					09 资料测试
						要求与参考
							1、需求对应的开发使用指南在研发支持文档里正确描述
							2、需求对应的API描述在研发支持文档里正确描述
						XXX
				其它维度的思维发散测试设计，不限
		5.测试设计评审纪要
			遗留问题
				XXX
			评审人
				XXX
			评审时间
				XXX
